# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.3
      
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        
      - name: Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      
      - name: Compile
        run: yarn build
      
      - name: echo ref
        run: echo ${{ github.ref }}
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            dist
            firebase.json
            .firebaserc
  
  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.5
      
      - name: Echo files
        run: |
          echo ${{steps.download.outputs.download-path}}
          ls ${{steps.download.outputs.download-path}}
          ls
          
      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.3
      
      - name: Install firebase-tools
        run: npm install -g firebase-tools
        
      - name: Deploy to Firebase
        working-directory: ${{steps.download.outputs.download-path}}
        run: firebase deploy --only hosting --token $FIREBASE_TOKEN
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      
          

      
